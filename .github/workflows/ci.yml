name: MLflow CI & Docker Build

on:
  push:
    paths:
      - 'MLProject/**'
  workflow_dispatch:

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Conda environment
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: MLProject/conda.yaml
          activate-environment: mlflow-env
          auto-activate-base: false

      # Verifikasi environment Conda aktif
      - name: Verify Conda Environment
        run: |
          conda info --envs
          conda activate mlflow-env
          conda list

      # Install dependencies tambahan jika diperlukan
      - name: Install Dependencies
        run: |
          conda activate mlflow-env
          pip install -r MLProject/requirements.txt || echo "requirements.txt not found, skipping..."

      # Install MLflow CLI
      - name: Install MLflow CLI
        run: |
          conda activate mlflow-env
          pip install mlflow==2.22.0

      # Check MLflow version
      - name: Check MLflow version
        run: |
          conda activate mlflow-env
          mlflow --version

      # Jalankan MLflow Project
      - name: Run MLflow Project
        run: |
          cd MLProject
          mlflow run .

      # Debug: list isi MLruns
      - name: List contents of mlruns
        run: |
          ls -l MLProject/mlruns || echo "mlruns folder not found"

      # Simpan artifact
      - name: Save MLflow Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r MLProject/mlruns artifacts/mlruns || echo "No mlruns directory found"

      # Upload artifacts ke GitHub
      - name: Upload MLflow artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mlflow-artifacts
          path: artifacts/mlruns

      # Login ke Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build dan push Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/knn-model:latest MLProject
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/knn-model:latest
